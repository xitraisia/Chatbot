"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var connector_1 = require("../connector");
var newbot_sessions_1 = require("newbot-sessions");
var express_1 = require("bottender/express");
var bottender = __importStar(require("bottender"));
var BottenderConnector = /** @class */ (function (_super) {
    __extends(BottenderConnector, _super);
    function BottenderConnector(app, converse, settings) {
        return _super.call(this, app, converse, settings) || this;
    }
    BottenderConnector.prototype.handler = function (context) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, text, isText, session;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = context.event, text = _a.text, isText = _a.isText;
                        if (!isText)
                            return [2 /*return*/];
                        session = new newbot_sessions_1.BottenderSession(context);
                        return [4 /*yield*/, this.exec(text, session)];
                    case 1:
                        _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    BottenderConnector.prototype.registerRoutes = function (platform, option) {
        if (option === void 0) { option = {}; }
        if (option.requiredToken && !this.settings.accessToken) {
            return false;
        }
        var bot = new bottender[platform + 'Bot'](this.settings).onEvent(this.handler.bind(this));
        this.platform = platform;
        this.client = bot.connector._client;
        express_1.registerRoutes(this.app, bot, {
            path: this.routePath(),
            verifyToken: this.settings.verifyToken
        });
        return true;
    };
    BottenderConnector.prototype.proactive = function (obj) {
        var session = new newbot_sessions_1.BottenderSession(this.client, {
            userId: obj.userId,
            platform: this.platform.toLowerCase()
        });
        session['proactive'] = true;
        if (obj.event) {
            return this.event(obj.event, session);
        }
        else {
            return this.exec(obj.text || obj.data.text, session);
        }
    };
    return BottenderConnector;
}(connector_1.Connector));
exports.BottenderConnector = BottenderConnector;
