"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var platform_1 = require("../platform");
var ActionsOnGoogleFormat = /** @class */ (function (_super) {
    __extends(ActionsOnGoogleFormat, _super);
    function ActionsOnGoogleFormat(text, session, user) {
        return _super.call(this, text, session, user) || this;
    }
    ActionsOnGoogleFormat.prototype.image = function (contentUrl) {
        return [
            this.text,
            {
                method: 'Image',
                params: [{
                        url: contentUrl,
                        alt: this.text
                    }]
            }
        ];
    };
    ActionsOnGoogleFormat.prototype.video = function (contentUrl) {
        return [
            this.text,
            {
                method: 'BasicCard',
                params: [{
                        text: name,
                        buttons: {
                            title: this.getByLang({
                                fr_FR: 'Voir la vidÃ©o',
                                en_EN: 'View video'
                            }),
                            url: contentUrl
                        }
                    }]
            }
        ];
    };
    ActionsOnGoogleFormat.prototype.buttons = function (buttons) {
        return __spreadArrays([
            this.text
        ], buttons.map(function (b) {
            var method, param;
            switch (b.type) {
                case 'postback':
                    method = 'Suggestions';
                    param = b.msg || b.title;
                    break;
                case 'url':
                case 'web_url':
                    method = 'LinkOutSuggestion';
                    param = {
                        name: b.title,
                        url: b.url
                    };
                    break;
            }
            return {
                method: method,
                params: [param]
            };
        }));
    };
    ActionsOnGoogleFormat.prototype.quickReplies = function (actions) {
        return [this.text, {
                method: 'Suggestions',
                params: this.inlineQuickReplies(actions)
            }];
    };
    ActionsOnGoogleFormat.prototype.signin = function () {
        return [
            {
                method: 'SignIn',
                params: [this.text]
            }
        ];
    };
    return ActionsOnGoogleFormat;
}(platform_1.PlatformFormat));
exports.ActionsOnGoogleFormat = ActionsOnGoogleFormat;
