"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
var MessengerBottenderFormat = /** @class */ (function (_super) {
    __extends(MessengerBottenderFormat, _super);
    function MessengerBottenderFormat(text, session, user) {
        return _super.call(this, text, session, user) || this;
    }
    MessengerBottenderFormat.prototype.image = function (contentUrl) {
        return this._attachment('sendImage', contentUrl);
    };
    MessengerBottenderFormat.prototype.video = function (contentUrl) {
        return this._attachment('sendVideo', contentUrl);
    };
    MessengerBottenderFormat.prototype.audio = function (contentUrl) {
        return this._attachment('sendAudio', contentUrl);
    };
    MessengerBottenderFormat.prototype.file = function (contentUrl) {
        return this._attachment('sendFile', contentUrl);
    };
    MessengerBottenderFormat.prototype.formatQuickReplies = function (quickReplies) {
        return {
            method: 'sendText',
            params: [
                this.text,
                {
                    quick_replies: quickReplies
                }
            ]
        };
    };
    MessengerBottenderFormat.prototype._attachment = function (method, contentUrl) {
        return [this.text, {
                method: method,
                params: [
                    contentUrl
                ]
            }];
    };
    MessengerBottenderFormat.prototype.email = function () {
        var quick_replies = _super.prototype.email.call(this).quick_replies;
        return this.formatQuickReplies(quick_replies);
    };
    MessengerBottenderFormat.prototype.quickReplies = function (actions) {
        var quick_replies = _super.prototype.quickReplies.call(this, actions).quick_replies;
        return this.formatQuickReplies(quick_replies);
    };
    MessengerBottenderFormat.prototype.buttons = function (buttons) {
        buttons = _super.prototype.buttons.call(this, buttons);
        return {
            method: 'sendButtonTemplate',
            params: [
                this.text,
                buttons
            ]
        };
    };
    return MessengerBottenderFormat;
}(_1.MessengerFormat));
exports.MessengerBottenderFormat = MessengerBottenderFormat;
