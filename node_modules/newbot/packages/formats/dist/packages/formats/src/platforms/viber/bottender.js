"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var platform_1 = require("../platform");
var flatten_1 = __importDefault(require("lodash/flatten"));
var ViberBottenderFormat = /** @class */ (function (_super) {
    __extends(ViberBottenderFormat, _super);
    function ViberBottenderFormat(text, session, user) {
        return _super.call(this, text, session, user) || this;
    }
    ViberBottenderFormat.prototype.image = function (contentUrl, contentType, name, thumbnail) {
        return {
            method: 'sendPicture',
            params: [{
                    text: this.text,
                    media: contentUrl,
                    thumbnail: thumbnail
                }]
        };
    };
    ViberBottenderFormat.prototype.video = function (contentUrl, contentType, name, _a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.thumbnail, thumbnail = _c === void 0 ? '' : _c, _d = _b.duration, duration = _d === void 0 ? '' : _d, _e = _b.size, size = _e === void 0 ? '' : _e;
        return __awaiter(this, void 0, void 0, function () {
            var sizeFile;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0: return [4 /*yield*/, this.sizeFile(contentUrl)];
                    case 1:
                        sizeFile = _f.sent();
                        return [2 /*return*/, [
                                this.text,
                                {
                                    method: 'sendVideo',
                                    params: [{
                                            media: contentUrl,
                                            thumbnail: thumbnail,
                                            duration: duration,
                                            size: size || sizeFile
                                        }]
                                }
                            ]];
                }
            });
        });
    };
    ViberBottenderFormat.prototype.carousel = function (cards) {
        var _this = this;
        return {
            method: 'sendCarouselContent',
            params: [{
                    Type: 'rich_media',
                    ButtonsGroupColumns: 6,
                    ButtonsGroupRows: 7,
                    Buttons: flatten_1.default(cards.map(function (card) { return _this.card(card); }))
                }]
        };
    };
    ViberBottenderFormat.prototype.contact = function (phone, name) {
        return [
            this.text,
            {
                method: 'sendContact',
                params: [{
                        name: name,
                        phone_number: phone
                    }]
            }
        ];
    };
    ViberBottenderFormat.prototype.location = function (latitude, longitude) {
        return [
            this.text,
            {
                method: 'sendLocation',
                params: [{
                        lat: latitude,
                        lon: longitude
                    }]
            }
        ];
    };
    ViberBottenderFormat.prototype.card = function (card) {
        card = _super.prototype.card.call(this, card);
        var url = '';
        var buttons = [];
        var sizeButtons = 0;
        if (card.buttons) {
            var firstButton = card.buttons[0];
            if (firstButton.url)
                url = firstButton.url;
            sizeButtons = card.buttons.length;
            buttons = card.buttons.map(function (b) {
                var type, text;
                switch (b.type) {
                    case 'url':
                    case 'web_url':
                        type = 'open-url';
                        text = b.title;
                        break;
                    case 'postback':
                        type = 'reply';
                        text = b.msg || b.title;
                        break;
                    default:
                        break;
                }
                return {
                    Columns: 6,
                    Rows: 1,
                    ActionType: type,
                    ActionBody: b.url || url,
                    Text: text
                };
            });
        }
        return flatten_1.default(__spreadArrays([{
                Columns: 6,
                Rows: 3 - (sizeButtons == 3 ? 1 : 0),
                ActionType: 'open-url',
                ActionBody: url,
                Image: card.image
            },
            {
                Columns: 6,
                Rows: 2,
                ActionType: 'open-url',
                ActionBody: url,
                Text: "<font color=#323232><b>" + card.title + "</b></font>\n            <font color=#777777><br>" + card.subtitle + "</font>",
                TextSize: "medium",
                TextVAlign: "middle",
                TextHAlign: "left"
            }], buttons));
    };
    return ViberBottenderFormat;
}(platform_1.PlatformFormat));
exports.ViberBottenderFormat = ViberBottenderFormat;
