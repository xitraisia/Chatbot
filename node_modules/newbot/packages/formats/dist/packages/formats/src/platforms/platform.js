"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var request_promise_1 = __importDefault(require("request-promise"));
var PlatformFormat = /** @class */ (function () {
    function PlatformFormat(text, session, user) {
        this.text = text;
        this.session = session;
        this.user = user;
        this.defaultLanguage = '';
    }
    PlatformFormat.prototype.actived = function () {
        var source = this.session.message.source;
        return source === this['name'];
    };
    PlatformFormat.prototype.getByLang = function (prop, _default) {
        if (_default === void 0) { _default = 'en_EN'; }
        var lang = this.user.getLang();
        if (prop && lang) {
            if (prop[lang]) {
                return prop[lang];
            }
            else if (prop[this.defaultLanguage]) {
                return prop[this.defaultLanguage];
            }
            else {
                var lang_1 = Object.keys(prop)[0];
                if (PlatformFormat.LANGS_ID.indexOf(lang_1) != -1) {
                    return prop[lang_1];
                }
            }
        }
        if (_default) {
            return prop[_default];
        }
        return prop;
    };
    PlatformFormat.prototype.toByLang = function (obj) {
        if (typeof obj == 'string')
            return obj;
        for (var prop in obj) {
            obj[prop] = this.getByLang(obj[prop]);
        }
        return obj;
    };
    PlatformFormat.prototype.sizeFile = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            var headers;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_promise_1.default({
                            url: url,
                            method: 'GET',
                            resolveWithFullResponse: true
                        })];
                    case 1:
                        headers = (_a.sent()).headers;
                        return [2 /*return*/, headers['content-length']];
                }
            });
        });
    };
    PlatformFormat.prototype.mapButton = function (b) {
        b = this.toByLang(b);
        /*if (b.event) {
            b.type = 'webview'
            b.url = 'https://example.com'
        }*/
        if (typeof b == 'string') {
            b = {
                type: 'postback',
                title: b
            };
        }
        if (!b.event) {
            if (!b.type && !b.url)
                b.type = 'postback';
            else if (!b.type)
                b.type = 'web_url';
        }
        return b;
    };
    PlatformFormat.prototype.inlineQuickReplies = function (actions) {
        var _this = this;
        return actions.map(function (action) {
            action = _this.toByLang(action);
            if (typeof action != 'string') {
                return action.text;
            }
            return action;
        });
    };
    PlatformFormat.prototype.quickReplies = function (actions) {
        actions = this.inlineQuickReplies(actions);
        return this.text + " (" + actions.reduce(function (a, b) { return a + ', ' + b; }) + ")";
    };
    PlatformFormat.prototype.card = function (card) {
        var _this = this;
        card = this.toByLang(card);
        if (card.buttons) {
            card.buttons = card.buttons.map(function (b) { return _this.mapButton(b); });
        }
        return card;
    };
    PlatformFormat.prototype.webviewUrl = function (params) {
        if (params === void 0) { params = {}; }
        var url = params.url, data = params.data;
        if (!url.startsWith('http')) {
            var baseUrl = process.env.SERVER_URL;
            url = (baseUrl ? baseUrl : '') + url;
        }
        var btoa = function (str) { return Buffer.from(str).toString('base64'); };
        var pdata = encodeURIComponent(btoa(JSON.stringify(data || {})));
        url += "?data=" + pdata + "&webview=true";
        return url;
    };
    PlatformFormat.LANGS_ID = ['fr_FR', 'en_EN'];
    PlatformFormat.formats = [
        "image",
        "video",
        "quickReplies",
        "buttons",
        "location",
        "contact",
        "phone",
        "email",
        "carousel",
        "signin",
        "webview"
    ];
    return PlatformFormat;
}());
exports.PlatformFormat = PlatformFormat;
